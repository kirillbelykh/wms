"""fixed relashions in item, cell, receiving and batch models

Revision ID: 8eae3d6b1759
Revises: d56f5254be53
Create Date: 2025-10-19 16:25:02.982716

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8eae3d6b1759'
down_revision: Union[str, Sequence[str], None] = 'd56f5254be53'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('batches', sa.Column('item_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('batches_cell_id_fkey'), 'batches', type_='foreignkey')
    op.create_foreign_key(None, 'batches', 'items', ['item_id'], ['id'])
    op.drop_column('batches', 'quantity')
    op.drop_column('batches', 'cell_id')
    op.add_column('cells', sa.Column('item_id', sa.Integer(), nullable=True))
    op.add_column('cells', sa.Column('batch_id', sa.Integer(), nullable=True))
    op.add_column('cells', sa.Column('receiving_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'cells', 'batches', ['batch_id'], ['id'])
    op.create_foreign_key(None, 'cells', 'items', ['item_id'], ['id'])
    op.create_foreign_key(None, 'cells', 'receivings', ['receiving_id'], ['id'])
    op.drop_constraint(op.f('items_cell_id_fkey'), 'items', type_='foreignkey')
    op.drop_constraint(op.f('items_batch_id_fkey'), 'items', type_='foreignkey')
    op.drop_column('items', 'batch_id')
    op.drop_column('items', 'cell_id')
    op.drop_constraint(op.f('receivings_cell_id_fkey'), 'receivings', type_='foreignkey')
    op.drop_column('receivings', 'cell_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('receivings', sa.Column('cell_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('receivings_cell_id_fkey'), 'receivings', 'cells', ['cell_id'], ['id'])
    op.add_column('items', sa.Column('cell_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('items_batch_id_fkey'), 'items', 'batches', ['batch_id'], ['id'])
    op.create_foreign_key(op.f('items_cell_id_fkey'), 'items', 'cells', ['cell_id'], ['id'])
    op.drop_constraint(None, 'cells', type_='foreignkey')
    op.drop_constraint(None, 'cells', type_='foreignkey')
    op.drop_constraint(None, 'cells', type_='foreignkey')
    op.drop_column('cells', 'receiving_id')
    op.drop_column('cells', 'batch_id')
    op.drop_column('cells', 'item_id')
    op.add_column('batches', sa.Column('cell_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('batches', sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'batches', type_='foreignkey')
    op.create_foreign_key(op.f('batches_cell_id_fkey'), 'batches', 'cells', ['cell_id'], ['id'])
    op.drop_column('batches', 'item_id')
    # ### end Alembic commands ###
