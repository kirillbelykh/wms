"""total upgrade

Revision ID: fd511038d453
Revises: b436a72af9a2
Create Date: 2025-08-26 18:33:32.887004

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fd511038d453'
down_revision: Union[str, Sequence[str], None] = 'b436a72af9a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_types_id'), 'item_types', ['id'], unique=False)
    op.create_index(op.f('ix_item_types_name'), 'item_types', ['name'], unique=False)
    op.create_table('sizes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sizes_id'), 'sizes', ['id'], unique=False)
    op.create_index(op.f('ix_sizes_name'), 'sizes', ['name'], unique=False)
    op.add_column('barcodes', sa.Column('quantity', sa.Integer(), nullable=False))
    op.execute('ALTER TABLE batches ALTER COLUMN name TYPE INTEGER USING name::integer;')
    op.create_unique_constraint(None, 'batches', ['name'])
    op.add_column('items', sa.Column('size_id', sa.Integer(), nullable=True))
    op.add_column('items', sa.Column('item_type_id', sa.Integer(), nullable=True))
    op.drop_index(op.f('ix_items_size'), table_name='items')
    op.drop_index(op.f('ix_items_type'), table_name='items')
    op.create_foreign_key(None, 'items', 'sizes', ['size_id'], ['id'])
    op.create_foreign_key(None, 'items', 'item_types', ['item_type_id'], ['id'])
    op.drop_column('items', 'size')
    op.drop_column('items', 'type')
    op.drop_column('items', 'quantity')
    op.add_column('manufacturers', sa.Column('country', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('manufacturers', 'country')
    op.add_column('items', sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('size', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'items', type_='foreignkey')
    op.drop_constraint(None, 'items', type_='foreignkey')
    op.create_index(op.f('ix_items_type'), 'items', ['type'], unique=False)
    op.create_index(op.f('ix_items_size'), 'items', ['size'], unique=False)
    op.drop_column('items', 'item_type_id')
    op.drop_column('items', 'size_id')
    op.drop_constraint(None, 'batches', type_='unique')
    op.alter_column('batches', 'name',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('barcodes', 'quantity')
    op.drop_index(op.f('ix_sizes_name'), table_name='sizes')
    op.drop_index(op.f('ix_sizes_id'), table_name='sizes')
    op.drop_table('sizes')
    op.drop_index(op.f('ix_item_types_name'), table_name='item_types')
    op.drop_index(op.f('ix_item_types_id'), table_name='item_types')
    op.drop_table('item_types')
    # ### end Alembic commands ###
